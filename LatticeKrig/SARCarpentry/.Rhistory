error[nCenter]<- whiteCenter[nCenter] - 1
error
sqrt( sum( error^2) )
nGrid<- 50
lKappaGrid<- seq( -5,-1,,nGrid )
for ( i in 1: nGrid){
lKappa<-lKappaGrid[i]
LKinfo<- LKrigSetup( x,nlevel=1, NC=N,NC.buffer=0,
a.wght= 4 + exp(2*lKappa),
alpha=1, normalize=FALSE )
B<- LKrig.precision( LKinfo, return.B=TRUE)
BCenter<- (t(B))[,nCenter]
hold<- (B%*% Sigma)%*% BCenter
whiteCenter<- hold
### Some checks of the shortcut formula
###  hold0<- (B%*% Sigma)%*% t(B)
###  hold0 is full covariance of whitened Matern field by the SAR B.
###  hold0<- hold0[nCenter,]
###  test.for.zero( hold0, whiteCenter)
### image.plot( matrix( hold0, N,N) )
whiteCenter<- whiteCenter/ max( whiteCenter)
error <-  whiteCenter
error[nCenter]<- whiteCenter[nCenter] - 1
#OK here is my goofy criterion deviation from Identity in a matrix norm
cat( lKappa, sqrt( sum( error^2) ), fill=TRUE)
}
1/ exp(-2.632653)^2
1/ exp(-2.632653)
exp(-2.632653)
1/ exp(-2.632653)
nGrid<- 20
lKappaGrid<- seq( -5,-1,,nGrid )
for ( i in 1: nGrid){
lKappa<-lKappaGrid[i]
LKinfo<- LKrigSetup( x,nlevel=1, NC=N,NC.buffer=0,
a.wght= 4 + exp(2*lKappa),
alpha=1, normalize=FALSE )
B<- LKrig.precision( LKinfo, return.B=TRUE)
BCenter<- (t(B))[,nCenter]
hold<- (B%*% Sigma)%*% BCenter
whiteCenter<- hold
### Some checks of the shortcut formula
###  hold0<- (B%*% Sigma)%*% t(B)
###  hold0 is full covariance of whitened Matern field by the SAR B.
###  hold0<- hold0[nCenter,]
###  test.for.zero( hold0, whiteCenter)
### image.plot( matrix( hold0, N,N) )
whiteCenter<- whiteCenter/ max( whiteCenter)
error <-  whiteCenter
error[nCenter]<- whiteCenter[nCenter] - 1
#OK here is my goofy criterion deviation from Identity in a matrix norm
cat( lKappa, sqrt( sum( error^2) ), fill=TRUE)
}
32*2.54
32*2.54*.7
library( LatticeKrig)
N<- 51
x<- make.surface.grid( list( x=1:N, y=1:N))
Sigma<- stationary.cov(x,x,Covariance = "Matern", nu=1.0, theta=5)
nCenter<-  (N-1)*N/2 + N/2 + 1
nGrid<- 50
lKappaGrid<- seq( -5,-1,,nGrid )
for ( i in 1: nGrid){
lKappa<-lKappaGrid[i]
LKinfo<- LKrigSetup( x,nlevel=1, NC=N,NC.buffer=0,
a.wght= 4 + exp(2*lKappa),
alpha=1, normalize=FALSE )
B<- LKrig.precision( LKinfo, return.B=TRUE)
BCenter<- (t(B))[,nCenter]
hold<- (B%*% Sigma)%*% BCenter
whiteCenter<- hold
### Some checks of the shortcut formula
###  hold0<- (B%*% Sigma)%*% t(B)
###  hold0 is full covariance of whitened Matern field by the SAR B.
###  hold0<- hold0[nCenter,]
###  test.for.zero( hold0, whiteCenter)
### image.plot( matrix( hold0, N,N) )
whiteCenter<- whiteCenter/ max( whiteCenter)
error <-  whiteCenter
error[nCenter]<- whiteCenter[nCenter] - 1
#OK here is my goofy criterion deviation from Identity in a matrix norm
cat( lKappa, sqrt( sum( error^2) ),max( abs(error)),  fill=TRUE)
}
library( LatticeKrig)
help( "LKSphere")
library( rgl)
# show level 3
Level<- 3
SGrid <- IcosohedronFaces(4)
Tri <- SGrid$Face[[Level]]
L <- dim(Tri)[3]
plot3d(rbind(c(0, 0, 0)), xlim = c(-1, 1), ylim = c(-1, 1),
zlim = c(-1, 1), axes = FALSE, xlab = "", ylab = "",
zlab = "", type = "p", box = TRUE)
for (k in 1:L) {
U <- Tri[, , k]
rgl.triangles(U, col = "grey80")
}
plot3d(SGrid$nodes[[Level]], col = "green4", type = "s",
radius = 0.03, add = TRUE)
help( "rgl.triangles")
LKrig
help( LKrig)
data(ozone2)
x<-ozone2$lon.lat
y<- ozone2$y[16,]
# Find location that are not 'NA'.
# (LKrig is not set up to handle missing observations.)
good <-  !is.na( y)
x<- x[good,]
y<- y[good]
# fairly arbitrary choices for covariance parameters and lambda
# just to show a basic level call
obj1<- LKrig( x,y, a.wght=5, nlevel=3, nu=1.0, NC=10, lambda=.1)
names( ob1)
names( ob1)
names( obj1)
LKDiag
LKDiag( c(-1,5,-1), 10)
spind2full
system.time(  plot( 1:10))
library( LatticeKrig)
LKrig
qchisq(.95,1)
qchisq(.95,1)/2
library( fields)
obj<- outer( 1:10, 1:8, "+")
surface( obj,type="C",xlab="Protein", ylab="Carbohydrate", lab=c(6,6,6), font.lab=1, font.axis=1, labcex=1.4, cex.axis=1.4, cex.lab=1.4, xlim=c(0,60), ylim=c(0,60),
zlim=c(0,100))
)
obj<- list( x= 1:10, y=1:8, z= obj)
surface( obj,type="C",xlab="Protein", ylab="Carbohydrate", lab=c(6,6,6), font.lab=1, font.axis=1, labcex=1.4, cex.axis=1.4, cex.lab=1.4, xlim=c(0,60), ylim=c(0,60),
zlim=c(0,100))
)
quartz()
surface( obj,type="C",xlab="Protein", ylab="Carbohydrate", lab=c(6,6,6), font.lab=1, font.axis=1, labcex=1.4, cex.axis=1.4, cex.lab=1.4, xlim=c(0,60), ylim=c(0,60),
zlim=c(0,100))
)
library( LatticeKrig)
LKrig.sim
LKrig.basis
help( tcrossprod)
LKrig
library( LatticeKrig)
LKrig
LKrigMakewU
LKSetup
LKrigSetup
help( LKrig)
x<-ozone2$lon.lat
y<- ozone2$y[16,]
# Find location that are not 'NA'.
# (LKrig is not set up to handle missing observations.)
good <-  !is.na( y)
x<- x[good,]
y<- y[good]
LKinfoEX<- LKrigSetup( x, a.wght=5, nlevel=3, nu=1.0, NC=4,
Fixed.function=NULL)
obj1<- LKrig( x,y, LKinfo= LKinfoEX, lambda=.1)
data( ozone2)
x<-ozone2$lon.lat
y<- ozone2$y[16,]
# Find location that are not 'NA'.
# (LKrig is not set up to handle missing observations.)
good <-  !is.na( y)
x<- x[good,]
y<- y[good]
LKinfoEX<- LKrigSetup( x, a.wght=5, nlevel=3, nu=1.0, NC=4,
Fixed.function=NULL)
obj1<- LKrig( x,y, LKinfo= LKinfoEX, lambda=.1)
obj1
LKinfoEX$fixedFunction
args( LKrigSetup)
LKinfoEX<- LKrigSetup( x, a.wght=5, nlevel=3, nu=1.0, NC=4,
fixedFunction=NULL)
obj1<- LKrig( x,y, LKinfo= LKinfoEX, lambda=.1)
ob1
obj1
library( LatticeKrig)
ls (pos=2)
ls( pos=2) -> temp
temp
grep( temp"/./")
grep( temp,"/./")
grep( temp,".")
grep( ".", temp)
grep( "\.", temp)
grep( "\\.", temp)
ind <- grep( "\\.", temp)
temp[ind]
help( depreciated)
help( .depreciated)
help( .deprecated)
help( deprecated)
xg<- seq( -1,2,,100)
plot( xg, log( 1+ exp( xg)))
quartz()
plot( xg, log( 1+ exp( xg)))
xg<- seq( -1,3,,100)
plot( xg, log( 1+ exp( xg)))
abline( 0,1)
plot( xg, log( 1+ 10*exp( xg)))
diff( log( 1+ 10*exp( xg)))
1/0.04017363
library( LatticeKrig)
help( "LKDiag")
B<- LKDiag( c( -1,2,-1), 100, diags=c(-1,0,1))
image.plot(B)
image.plot(B)
quartz()
image.plot(B)
library( LatticeKrig)
B<- LKDiag( c( -1,2,-1), 100, diags=c(-1,0,1))
xg<- 1:100
K<- stationary.cov( as.matrix( xg, xg),
smoothness=1.0, theta = 3
)
args( stationary.cov)
K<- stationary.cov( as.matrix( xg, xg),Covariance="Matern",
smoothness=1.0, theta = 3
)
image.plot( K)
B<- LKDiag( c( -1,2,-1), 100, diags=c(-1,0,1))
xg<- 1:100
K<- stationary.cov( as.matrix( xg, xg),Covariance="Matern",
smoothness=1.0, theta = 6
)
image.plot( B%*%K%*%t(B))
quartz(0)
image.plot( B%*%K%*%t(B))
max( c( abs(B%*%K%*%t(B)))))
max( c( abs(B%*%K%*%t(B))))
sort( max( c( abs(B%*%K%*%t(B)))), rev=TRUE)[1:10]
sort( max( c( abs(B%*%K%*%t(B)))), decreasing=TRUE)[1:10]
kappa<- 6
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 100, diags=c(-1,0,1))
xg<- 1:100
K<- stationary.cov( as.matrix( xg, xg),Covariance="Matern",
smoothness=1.0, theta = 6
)
kappa<- 6
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
diag( K0)
image.plot( K0)
xg<- 1:101
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
matplot(xg, c( K0[,50],K  ) )
K0[,50]
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
K
matplot(xg, c( K0[,50],K  ) )
xg
matplot(xg, cbind( K0[,50],K  ) )
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,50],K  ) )
kappa<- 10
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,50],K  ), type="l", lty=1 )
kappa<- 15
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,50],K  ), type="l", lty=1 )
kappa<- 20
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,50],K  ), type="l", lty=1 )
kappa<- 25
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,50],K  ), type="l", lty=1 )
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
kappa<- 27.5
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
kappa<- 25
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
plot( xg,  K0[,51]- K, type="l")
fig1DApprox<- function(kappa= 25){
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
plot( xg,  K0[,51]- K, type="l")
}
set.panel(4,1)
fig1DApprox(25)
fig1DApprox(26)
set.panel(4,4)
fig1DApprox(27)
fig1DApprox(24)
fig1DApprox(30)
fig1DApprox(20)
fig1DApprox<- function(kappa= 25){
B<- LKDiag( c( -1/2,1 + 1/kappa ,-1/2), 101, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 50:-50
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
plot( xg,  K0[,51]- K, type="l")
}
fig1DApprox(6)
set.panel( 2,1)
fig1DApprox(6)
fig1DApprox(12)
fig1DApprox(24)
fig1DApprox(30)
fig1DApprox(35)
fig1DApprox(40)
fig1DApprox<- function(kappa= 25){
B<- LKDiag( c( -1/2,1 + 1/kappa ,-1/2), 201, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 100:-100
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
matplot(xg, cbind( K0[,51],K  ), type="l", lty=1 )
plot( xg,  K0[,51]- K, type="l")
}
fig1DApprox(40)
source('~/.active-rstudio-document')
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
fig1DApprox(40)
quartz()
fig1DApprox(40)
set.panel(2,1)
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
set.panel(2,1)
fig1DApprox(40)
quartz()
fig1DApprox(40)
fig1DApprox<- function(kappa= 25){
B<- LKDiag( c( -1/2,1 + 1/kappa ,-1/2), 201, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 100:-100
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
#matplot(xg, cbind( K0[,101],K  ), type="l", lty=1 )
plot( xg,  K0[,1011]- K, type="l")
}
fig1DApprox(40)
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
fig1DApprox(40)
fig1DApprox(45)
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox
)
)
")(
"
)
'
)
kg<- seq( 40,55, ,100)
for( kappa in kg){}
for( kappa in kg){ fig1DApprox(kappa)}
fig1DApprox<- function(kappa= 25){
B<- LKDiag( c( -1,2 + 1/kappa ,-1), 201, diags=c(-1,0,1))
Binv<- solve(B)
K0<- Binv%*%t(Binv)
Kd0<- sqrt(diag( K0))
K0 <-   t(K0/Kd0)/ Kd0
xg<- 100:-100
K<- stationary.cov( as.matrix( xg), 0,Covariance="Matern",
smoothness=1.0, theta = 6
)
K<- c( K)
#matplot(xg, cbind( K0[,101],K  ), type="l", lty=1 )
#plot( xg,  K0[,101]- K, type="l")
print( c( kappa, sqrt( mean((K0[,101]- K )^2)) ))
}
for( kappa in kg){ fig1DApprox(kappa)}
kg<- seq( 20,25, ,100)
for( kappa in kg){ fig1DApprox(kappa)}
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
fig1DApprox(22)
set.panel( 2,1)
fig1DApprox(22)
set.panel( 3,1)
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
set.panel( 3,1)
fig1DApprox(22)
abline( 0,1)
setwd("~/Dropbox/Home/Current_talks/SARCarpentry")
pdf("pix/fig1DApprox.pdf", height=6in, width=6in)
fig1DApprox(22)
dev.off()
library( LatticeKrig)
source( "fig1DApprox.R")
setwd("~/Dropbox/Home/Current_talks/SARCarpentry")
pdf("pix/fig1DApprox.pdf", height=6in, width=6in)
fig1DApprox(22)
dev.off()
pdf("pix/fig1DApprox.pdf", height=6, width=6)
fig1DApprox(22)
dev.off()
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
setwd("~/Dropbox/Home/Current_talks/SARCarpentry")
pdf("pix/fig1DApproxA.pdf", height=6, width=6)
fig1DApproxA(22, TRUE)
dev.off()
pdf("pix/fig1DApproxB.pdf", height=6, width=6)
fig1DApproxA(22, FALSE)
dev.off()
pdf("pix/fig1DApproxA.pdf", height=6, width=6)
fig1DApprox(22, TRUE)
dev.off()
pdf("pix/fig1DApproxB.pdf", height=6, width=6)
fig1DApprox(22, FALSE)
dev.off()
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
pdf("pix/fig1DApproxA.pdf", height=6, width=6)
fig1DApprox(22, TRUE)
dev.off()
pdf("pix/fig1DApproxB.pdf", height=6, width=6)
fig1DApprox(22, FALSE)
dev.off()
source('~/Dropbox/Home/Current_talks/SARCarpentry/fig1DApprox.R')
pdf("pix/fig1DApproxA.pdf", height=6, width=6)
fields.style()
fig1DApprox(22, TRUE)
dev.off()
pdf("pix/fig1DApproxB.pdf", height=6, width=6)
fields.style()
fig1DApprox(22, FALSE)
dev.off()
